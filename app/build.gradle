import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

ext.buildNumber = System.getenv("BUILD_NUMBER") ?: "dev"
def versionNumber = '5.1.15'
def incrementalVersionCode = 548
def versionCodeNumber = "548".toInteger()
android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    buildFeatures {
        viewBinding = true
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    lintOptions {
        abortOnError false
    }

    defaultConfig {

        vectorDrawables.useSupportLibrary = true

        applicationId "com.nextmarkets.next"

        minSdkVersion 23

        targetSdkVersion 29

        versionCode versionCodeNumber

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        buildConfigField "String", "BUILD_DETAILS", "\"code: ${versionCodeNumber}, ${buildDateAndGit()}\""

        buildConfigField "String", "API_USER_AGENT", "\"/${versionNumber}-${versionCodeNumber}-${buildDateAndGit()}\""

        buildConfigField "String", "APP_VERSION", "\"${versionNumber}\""

        buildConfigField "String", "APP_BUILD", "\"${versionCodeNumber}\""

        renderscriptTargetApi 22

        renderscriptSupportModeEnabled true

        javaCompileOptions {

            annotationProcessorOptions {

                includeCompileClasspath false

            }

        }

    }

    configurations.all {

        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'

    }

    dexOptions.javaMaxHeapSize = "2g"

    packagingOptions {

        pickFirst 'META-INF/DEPENDENCIES'

        pickFirst 'META-INF/NOTICE'

        pickFirst 'META-INF/LICENSE'

        pickFirst 'META-INF/NOTICE.txt'

        pickFirst 'META-INF/LICENSE.txt'

        pickFirst 'META-INF/services/javax.annotation.processing.Processor'

        exclude 'META-INF/rxjava.properties'

        exclude 'META-INF/*.kotlin_module'

    }

    buildTypes {

        release {

            minifyEnabled true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

        debug {

            ext.enableCrashlytics = false

            versionNameSuffix = "_debug"

            testCoverageEnabled = false

        }

    }


    flavorDimensions 'environment'

    productFlavors {

        production {

            dimension 'environment'

            applicationId "com.nextmarkets.next"

            versionName "$versionNumber"

            buildConfigField "Boolean", "PUSH_NOTIFICATIONS_ENABLED", "true"

            buildConfigField "String", "BASE_URL", "\"https://api.nextmarkets.com\""

            buildConfigField "String", "PRODUCT_IMAGE_URL", "\"https://nxmstorprodproductimages.blob.core.windows.net/productimages/\""

            buildConfigField "String", "AUTHADA_URL", "\"https://banking.eid.authada.de/eservice/v3/api/\""

            buildConfigField "String", "AUTHADA_CERT_HASH", "\"aa/aa/aa=\""

            buildConfigField "String", "APP_CENTER_SECRET", "\"aa-4190-4bc6-be5f-aa\""

            buildConfigField "String", "ADJUST_APP_TOKEN", "\"aa\""

// signingConfig signingConfigs.production

        }

        beta {

            dimension 'environment'

            applicationId "com.nextmarkets.next.beta"

            versionName "$versionNumber.$buildNumber (Beta)"

            buildConfigField "Boolean", "PUSH_NOTIFICATIONS_ENABLED", "true"

            buildConfigField "String", "BASE_URL", "\"https://api.nextmarkets.com\""

            ext.betaDistributionGroupAliases = "android-tester"

            ext.betaDistributionReleaseNotesFilePath = "app/releasenotes.txt"

            buildConfigField "String", "PRODUCT_IMAGE_URL", "\"https://nxmstorprodproductimages.blob.core.windows.net/productimages/\""

            buildConfigField "String", "AUTHADA_URL", "\"https://banking.eid.authada.de/eservice/v3/api/\""

            buildConfigField "String", "AUTHADA_CERT_HASH", "\"aa/aa/aa=\""

            buildConfigField "String", "APP_CENTER_SECRET", "\"aa-c0aa-aa-bd4d-aa\""

            buildConfigField "String", "ADJUST_APP_TOKEN", "\"aa\""

// signingConfig signingConfigs.beta

        }

        staging {

            dimension 'environment'

            applicationId "com.nextmarkets.next.staging"

            versionName "$versionNumber (Staging)"

            buildConfigField "Boolean", "PUSH_NOTIFICATIONS_ENABLED", "true"

            buildConfigField "String", "BASE_URL", "\"https://api-alpha.nextmarkets.com\""

            ext.betaDistributionGroupAliases = "android-tester"

            ext.betaDistributionReleaseNotesFilePath = "app/releasenotes.txt"

            buildConfigField "String", "PRODUCT_IMAGE_URL", "\"https://nxmstorstagproductimages.blob.core.windows.net/productimages/\""

            buildConfigField "String", "AUTHADA_URL", "\"https://id.staging.authada.de/eservice/v3/api/\""

            buildConfigField "String", "AUTHADA_CERT_HASH", "\"aa/aa+4aIdjiuY=\""

            buildConfigField "String", "APP_CENTER_SECRET", "\"aa-9d6c-aa-be91-aa\""

            buildConfigField "String", "ADJUST_APP_TOKEN", "\"aa\""

// signingConfig signingConfigs.staging

        }


    }

}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {

    kotlinOptions {

        freeCompilerArgs = ["-XXLanguage:+InlineClasses"]

//freeCompilerArgs = ["-XXLanguage:+InlineClasses", "-Xnew-inference"]

    }

}

kapt {

    generateStubs = true

    useBuildCache = true

    mapDiagnosticLocations = true

}

androidExtensions {

// this is used for the Parcelable Kotlin Annotation

    experimental = true

}

dependencies {


    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.navigation:navigation-ui:2.3.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}

def buildDateAndGit() {

    def df = new SimpleDateFormat("yyyy-MM-dd_HH:mm:ss")

    def dateString = df.format(new Date())

    def stdout = new ByteArrayOutputStream()

    exec {

        commandLine 'git', 'rev-parse', '--short', 'HEAD'

        standardOutput = stdout

    }

    return dateString + "." + stdout.toString().trim()

}

def commitsOnHead() {

    def stdout = new ByteArrayOutputStream()

    exec {

        commandLine 'git', 'rev-list', '--count', 'HEAD'

        standardOutput = stdout

    }

    return stdout.toString().trim()

}
